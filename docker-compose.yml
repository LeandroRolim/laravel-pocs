services:
    laravel.test:
        build:
            context: ./docker/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - pgsql
            - memcached
            - redis
    pgsql:
        image: 'arm64v8/postgres:15'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sail-pgsql:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    memcached:
        image: 'arm64v8/memcached:alpine'
        ports:
            - '${FORWARD_MEMCACHED_PORT:-11211}:11211'
        networks:
            - sail
    redis:
        image: 'arm64v8/redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    otel-collector:
        image: otel/opentelemetry-collector-contrib
        volumes:
            - ./otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
        ports:
            - 1888:1888 # pprof extension
            - 8888:8888 # Prometheus metrics exposed by the collector
            - 8889:8889 # Prometheus exporter metrics
            - 13133:13133 # health_check extension
            - 4317:4317 # OTLP gRPC receiver
            - 4318:4318 # OTLP http receiver
            - 55679:55679 # zpages extension
        networks:
            - sail
    grafana:
        image: grafana/grafana:9.4.3
        volumes:
            - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
        environment:
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_AUTH_DISABLE_LOGIN_FORM=true
            - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
        ports:
            - "3000:3000"
        networks:
            - sail
    tempo:
        image: grafana/tempo:latest
        command: [ "-config.file=/etc/tempo.yaml" ]
        volumes:
            - ./tempo.yaml:/etc/tempo.yaml
        networks:
            - sail
        ports:
            - "3200:3200"   # tempo
    prometheus:
        image: prom/prometheus:latest
        command:
            - --config.file=/etc/prometheus.yaml
            - --web.enable-remote-write-receiver
            - --enable-feature=exemplar-storage
        volumes:
            - ./prometheus.yaml:/etc/prometheus.yaml
        ports:
            - "9090:9090"
        networks:
            - sail

networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
    sail-redis:
        driver: local
